extends CharacterBody2D

@export var speed := 100.0
@export var bus_stop_path: NodePath  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Inspector ‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà BusStop

var target_position: Vector2
var walking := false
var bus_stop = null

func _ready():
	if bus_stop_path:
		bus_stop = get_node(bus_stop_path)
		if bus_stop:
			bus_stop.connect("bus_arrived", _on_bus_arrived)
			print("‚úÖ DekKu: ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° signal ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
		else:
			print("‚ùå DekKu: ‡∏´‡∏≤ Node ‡∏à‡∏≤‡∏Å path ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠")
	else:
		print("‚ùå DekKu: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î bus_stop_path")

func _on_bus_arrived(bus_position: Vector2):
	print("üë¶ DekKu: ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö signal ‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á:", bus_position)
	target_position = bus_position
	walking = true

func _physics_process(delta):
	if walking:
		var direction = (target_position - global_position).normalized()
		velocity = direction * speed
		move_and_slide()

		if global_position.distance_to(target_position) < 10:
			print("‚úÖ DekKu: ‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏ñ‡πÅ‡∏•‡πâ‡∏ß")
			walking = false
			velocity = Vector2.ZERO
			queue_free()
