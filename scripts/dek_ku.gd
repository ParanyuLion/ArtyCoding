extends CharacterBody2D

@onready var bus_stop = get_node("../Bus_stop")  # Absolute path
@export var target_position: Vector2  # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà DekKu ‡∏à‡∏∞‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ (‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏ñ)
@onready var talai_bus = get_node("/root/main/TalaiBus")


var walking := false
var speed := 100
#var velocity := Vector2.ZERO

func _ready():
	if bus_stop:
		var is_here = bus_stop.connect("bus_arrived", self._on_bus_arrived)
		print(is_here)
		print("üë¶ DekKu ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö signal ‡πÅ‡∏•‡πâ‡∏ß")
	else:
		print("‚ùå DekKu ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° bus_stop ‡πÉ‡∏ô Inspector")

func _on_bus_arrived():
	print("üë¶ DekKu: ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö signal ‡πÅ‡∏•‡πâ‡∏ß! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏£‡∏ñ")
	walking = true

func _physics_process(delta):
	if walking:
		var collision = move_and_collide(velocity*delta)
		var bus_pos = talai_bus.global_position  # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
		var direction = (bus_pos - global_position).normalized()
		velocity = direction * speed
		move_and_slide()

		if collision:
			var collider = collision.get_collider()
			if collider is CharacterBody2D:
				print("‚úÖ DekKu: ‡∏ñ‡∏∂‡∏á‡∏£‡∏ñ‡πÅ‡∏•‡πâ‡∏ß")
				walking = false
				velocity = Vector2.ZERO
				queue_free()
